name: Publish Package (npm + GitHub Packages)

# Trigger only when a GitHub Release is published (i.e. not draft / prerelease creation unless published)
on:
  release:
    types: [published]

concurrency:
  group: publish-${{ github.event.release.tag_name }}
  cancel-in-progress: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # for GitHub Packages
      id-token: write   # provenance / OIDC (optional, for npm provenance)
    env:
      # Workspace relative path to the package directory
      PKG_DIR: packages/cursor-with
      SCOPE: '@leoncry'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Enable corepack & setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.0.0 --activate
          echo "PNPM PATH: $(which pnpm)"
          pnpm --version

      # (Optional) If you still prefer the action-based setup, you can re-add pnpm/action-setup here.

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build:core

      - name: Show package info
        run: |
          echo "Release tag: ${{ github.event.release.tag_name }}"
          node -p "require('./${PKG_DIR}/package.json').name + ' v' + require('./${PKG_DIR}/package.json').version"

      - name: Verify tag matches package version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          PKG_VERSION=$(node -p "require('./${PKG_DIR}/package.json').version")
          if [ "v$PKG_VERSION" != "$TAG" ]; then
            echo "Tag ($TAG) does not match package version (v$PKG_VERSION)" >&2
            exit 1
          fi
          echo "Tag matches package version âœ…"

      - name: Prepare npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        working-directory: ${{ env.PKG_DIR }}
        run: |
          npm publish --access public --registry=https://registry.npmjs.org/

      - name: Prepare GitHub Packages auth
        run: |
          echo "${SCOPE}:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        working-directory: ${{ env.PKG_DIR }}
        run: |
          npm publish --access public --registry=https://npm.pkg.github.com

      - name: Summary
        run: |
          echo "### Publish summary" >> $GITHUB_STEP_SUMMARY
          echo "Release: ${{ github.event.release.name || github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Tag: ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Package: $(node -p \"require('./${PKG_DIR}/package.json').name\")" >> $GITHUB_STEP_SUMMARY
          echo "Version: $(node -p \"require('./${PKG_DIR}/package.json').version\")" >> $GITHUB_STEP_SUMMARY
          echo "Mode: PUBLISH" >> $GITHUB_STEP_SUMMARY
