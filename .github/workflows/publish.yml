name: Publish Package (npm + GitHub Packages)

on:
  release:
    types: [published]

concurrency:
  group: publish-${{ github.event.release.tag_name }}
  cancel-in-progress: false

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      PKG_DIR: packages/cursor-with
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable corepack & setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.0.0 --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build:core

      - name: Verify version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          VER="v$(node -p "require('./${PKG_DIR}/package.json').version")"
          if [ "$VER" != "$TAG" ]; then echo "Version mismatch"; exit 1; fi

      # ---------- 1. 发布到 npm（去 scope） ----------
      - name: Backup & De-scope package.json for npm
        working-directory: ${{ env.PKG_DIR }}
        run: |
          cp package.json package.json.bak
          node -e "
            const p = JSON.parse(require('fs').readFileSync('package.json','utf8'));
            p.name = 'cursorwith-ts';           // 去 scope
            delete p.publishConfig;             // 用默认 registry
            require('fs').writeFileSync('package.json', JSON.stringify(p,null,2));
          "

      - name: Publish to npm
        working-directory: ${{ env.PKG_DIR }}
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # ---------- 2. 发布到 GitHub Packages（还原 scoped） ----------
      - name: Restore scoped package.json
        working-directory: ${{ env.PKG_DIR }}
        run: mv package.json.bak package.json

      - name: Publish to GitHub Packages
        working-directory: ${{ env.PKG_DIR }}
        run: npm publish --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Job summary
        run: |
          echo "npm: https://www.npmjs.com/package/cursorwith-ts" >> $GITHUB_STEP_SUMMARY
          echo "GitHub Packages: https://github.com/leoncry/cursorwith-ts/pkgs/npm/cursorwith-ts" >> $GITHUB_STEP_SUMMARY